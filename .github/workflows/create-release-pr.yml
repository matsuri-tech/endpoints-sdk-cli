name: Create Release Note

on:
  schedule:
    - cron: "0 5 * * 2"
  workflow_dispatch:

jobs:
  check-commits:
    runs-on: ubuntu-latest
    outputs:
      should_create_pr: ${{ steps.check.outputs.should_create_pr }}
      version_bump: ${{ steps.check.outputs.version_bump }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for new commits and version bump type
        id: check
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          COMMIT_COUNT=$(git rev-list $LAST_TAG..HEAD --count)

          # Determine version bump type
          COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"%s")
          VERSION_BUMP="patch"
          while IFS= read -r commit; do
            if [[ $commit =~ ^(feat!|.*BREAKING CHANGE:) ]]; then
              VERSION_BUMP="major"
              break
            elif [[ $commit =~ ^feat: ]] && [ "$VERSION_BUMP" != "major" ]; then
              VERSION_BUMP="minor"
            fi
          done <<< "$COMMITS"

          # Check conditions: skip if commits < 10 AND only patch changes
          SHOULD_CREATE_PR="false"
          if [ $COMMIT_COUNT -ge 10 ] || [ "$VERSION_BUMP" != "patch" ]; then
            SHOULD_CREATE_PR="true"
          fi

          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT
          echo "version_bump=$VERSION_BUMP" >> $GITHUB_OUTPUT
          echo "should_create_pr=$SHOULD_CREATE_PR" >> $GITHUB_OUTPUT

          if [ "$SHOULD_CREATE_PR" = "false" ]; then
            echo "Skipping release PR creation. Commits: $COMMIT_COUNT, Version bump: $VERSION_BUMP"
          else
            echo "Creating release PR. Commits: $COMMIT_COUNT, Version bump: $VERSION_BUMP"
          fi

  create-release-pr:
    needs: check-commits
    if: needs.check-commits.outputs.should_create_pr == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use version bump from check step
        id: version_bump
        run: echo "version_bump=${{ needs.check-commits.outputs.version_bump }}" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          pnpm version ${{ steps.version_bump.outputs.version_bump }} --no-git-tag-version

          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped version to: $NEW_VERSION"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.REPO_ONLY_GITHUB_TOKEN }}
          commit-message: "chore: bump version to v${{ steps.bump_version.outputs.new_version }}"
          title: "Release Note: v${{ steps.bump_version.outputs.new_version }}"
          branch: release/v${{ steps.bump_version.outputs.new_version }}
          base: master
          reviewers: hrdtbs
          labels: release
          delete-branch: true
